# This program is essentially just a "manager" for the jupiter-swap-api process.
[manager]
jupiter_path="/jupiter/jupiter-swap-api" # /jupiter is the docker container workdir
auto_restart_minutes=10

# These environmental variables are specific to Jupiter.
# For a complete list of available variables, use the jupiter-swap-api --help command.
# Env's available as of Aug 1, 2024:
# - `MARKET_CACHE`: Jupiter market cache file path or URL, check production Jupiter cache for format https://cache.jup.ag/markets?v=3. Note: the params field is required for some AMMs and is AMM type specific.
# - `RPC_URL`: RPC URL for polling and fetching user accounts.
# - `YELLOWSTONE_GRPC_ENDPOINT`: Yellowstone gRPC endpoint e.g. https://jupiter.rpcpool.com.
# - `YELLOWSTONE_GRPC_X_TOKEN`: Yellowstone gRPC x token, the token after the hostname.
# - `YELLOWSTONE_GRPC_ENABLE_PING`: Enable pinging the grpc server, useful for a load balanced Yellowstone GRPC endpoint https://github.com/rpcpool/yellowstone-grpc/issues/225.
# - `SNAPSHOT_POLL_INTERVAL_MS`: Interval after which AMMs related account should be fetched, in yellowstone grpc mode, there will be a periodic poll to snapshot the confirmed state of AMM accounts. Default to 200 ms for poll mode and 30000 ms for yellowstone grpc mode.
# - `ENABLE_EXTERNAL_AMM_LOADING`: Enable loading external AMMs from keyedUiAccounts in swap related endpoints.
# - `DISABLE_SWAP_CACHE_LOADING`: Disable loading caches necessary for swap related features to function properly, such as address lookup tables. This is useful for quote only APIs.
# - `ALLOW_CIRCULAR_ARBITRAGE`: Allow arbitrage quote and swap, where input mint is equal to output mint.
# - `JUPITER_EUROPA_URL`: Jupiter europa URL, for getting new markets at runtime.
# - `SENTRY_DSN`: Sentry DSN to send error to.
# - `EXPOSE_QUOTE_AND_SIMULATE`: Enable exposing quote and simulate endpoints.
# - `HOST`: The host. Default: 0.0.0.0.
# - `PORT`: A port number on which to start the application. Default: 8080.
# - `ENABLE_DEPRECATED_INDEXED_ROUTE_MAPS`: Enable computing and serving the /indexed-route-map. Deprecated and not recommended to be enabled due to the high overhead.
# - `DEXES`: List of dexes to include, other dexes won't be loaded.
# - `EXCLUDE_DEXES`: List of dexes to exclude, from all dexes, excluded dexes won't be loaded.
# - `ENABLE_NEW_DEXES`: Enable new dexes that have been recently integrated.
# - `ENABLE_DIAGNOSTIC`: Enable the /diagnostic endpoint to quote.
# - `FILTER_MARKETS_WITH_MINTS`: List of mints to filter markets to include, markets which do not have at least 2 mints from this set will be excluded.
[env]
RUST_LOG="info"
RUST_BACKTRACE="full"
HOST="0.0.0.0"
PORT="8080" # Do not change this! To use a different port, change PORT in build.sh
RPC_URL="your.url"
#YELLOWSTONE_GRPC_ENDPOINT="" # only enable if you intend to use grpc
#YELLOWSTONE_GRPC_X_TOKEN=""  # only enable if you intend to use grpc
ALLOW_CIRCULAR_ARBITRAGE="true"
ENABLE_NEW_DEXES="true"
FILTER_MARKETS_WITH_MINTS="" # This will be ovewritten by mint filters defined below.

# The dynamic mint filter fetches tradable tokens from Jupiter's Token API during startup.
# By default, tokens are filtered out if they have no daily volume, are freezable, or are mintable.
# Optionally, tokens can also be filtered by "required_tags". These tags are organized into groups,
# and a token only needs to match at least one group to be accepted.
# Find all of Jupiter's token tags here: https://station.jup.ag/docs/token-list/token-list-api
[dynamic_mint_filter]
enabled=true
skip_freezable=true # freezable tokens are generally rugs and won't be tradable long
skip_mintable=false # a handful of stable coins are mintable, so defaulting to false
skip_no_volume=true # some tokens don't have any daily volume data on jupiter, optionally skip them (not skipping them will give you WAY more mints, which isn't always good)
required_tags=[
    ["pump"],
    ["verified"],
    ["community"],
    ["birdeye-trending"],
]

# Static mint filters are predefined lists of mints that you want to include.
# Multiple filters can be defined to suit different needs.
[[static_mint_filter]]
enabled=true
mints=[
    "So11111111111111111111111111111111111111112",  # sol
    "Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB", # usdt
    "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v", # usdc
    "4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R", # ray
    "J1toso1uCk3RLmjorhTtrVwY9HJ7X8V9yYac6Y7kGCPn", # jitosol
    "mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So",  # msol
    "7dHbWXmci3dT8UFYWYZweBLXgycu7Y3iL6trKn1Y7ARj", # stsol
    "7vfCXTUXx5WJV5JADk17DUJ4ksgau7utNKj4b963voxs", # weth
    "3NZ9JMVBmGAqocybic2c7LQCJScmgsAZ6vQqTDzcqmJh", # wbtc
    "JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN",  # jup
    "HZ1JovNiVvGrGNiiYvEozEVgZ58xaU3RKwX8eACQBCt3", # pyth
    "HNTvzaqTmDxJbi3isreXtUn9MUJEJy1bp9bo1rpGEGhi", # aurasol
    "jucy5XJ76pHVvtPZb5TKRcGQExkwit2P5s4vY8UzmpC",  # jucysol
    "iSoLdL1Nqqo94A51EXr5iuBiUtHMAnxHJKaToGKphLq",  # isol
    "bSo13r4TkiE4KumL71LsHTPpL2euBYLFx6h9HP3piy1",  # bsol
    "jupSoLaHXQiZZTSfEWMTRRgpnyFm8f6sZdosWBjx93v",  # jupsol
    "5oVNBeEEQvYi1cX3ir8Dx5n1P7pdxydbGF2X4TxVusJm", # inf
]

# Json mint filters are loaded on startup from the specific file provided in the path.
# The format must be json, which is just ["mintA", "mintB", "mintC"] but in a file.
[[json_mint_filter]]
enabled=false
path="/jupiter/mount/test-mints.json" # /jupiter is the docker container workdir